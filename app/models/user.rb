class User < ApplicationRecord
    # Include default devise modules. Others available are:
    # :confirmable, :lockable, :timeoutable and :omniauthable
    devise :database_authenticatable,
           :registerable,
           :rememberable,
           :validatable,
           :trackable,
           authentication_keys: [:username]

    has_many :visits, class_name: 'Ahoy::Visit'

    has_many :comments
    has_many :episodes, through: :comments
    has_many :playlists
    belongs_to :selected_playlist, optional: true, class_name: 'Playlist', foreign_key: :playlist_id

    belongs_to :system

    validates :username, uniqueness: true, presence: true

    # Enable the storing of like/dislike in the database
    acts_as_voter

    # On signup of new users (creation), we set the password (and confirmation) to `password`. This is to be removed
    # if the user authentification procedure requires a full login.
    before_validation on: :create do
        self.password = 'password'
        self.password_confirmation = 'password'

        # Get the default system, that is automatically generated by Podify
        system = System.find_by(name: 'default')
        # If it doesn't exist, create it
        unless system.present?
            experiment = Experiment.create!(name: 'Default Experiment')
            system = System.create!(name: 'default', experiment: experiment)
        end
        self.system = system

        # Automatically create a playlist on user creation
        playlists.build
    end

    def update_system(system)
        self.system = system
        save!
    end

    # Perform episodes search given an input query
    def episodes_search(query)
        return [] unless query.present?

        system_episodes = self.system.episodes

        # Perform search. Then filter out the episodes that are not in the current list of "searchable" episodes.
        # This is defined by the episodes in system (= system_episodes)
        system_episodes.search(query).records.records.where(id: system_episodes.pluck(:id))
    end

    def display_name
        username
    end

    def email_required?
        false
    end

    def will_save_change_to_email?
        false
    end
end
